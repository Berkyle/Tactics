{
    "project": {},
    "files": {
        "easyNinesBot.js": {
            "name": "easyNinesBot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "easyThreesBot.js": {
            "name": "easyThreesBot.js",
            "modules": {},
            "classes": {
                "easyBot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "easyThreesBotRules.js": {
            "name": "easyThreesBotRules.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "nineRulesEasy.js": {
            "name": "nineRulesEasy.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "easyBot": {
            "name": "easyBot",
            "shortname": "easyBot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "easyThreesBot.js",
            "line": 1,
            "description": "This is the class for the easy bot of the 3x3 game.",
            "is_constructor": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "easyNinesBot.js",
            "line": 13,
            "description": "runBot decides what the bot's next move will be depending on the difficulty chosen by the user.",
            "itemtype": "method",
            "name": "runBot",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "return": {
                "description": "none"
            },
            "class": "easyBot"
        },
        {
            "file": "easyNinesBot.js",
            "line": 44,
            "description": "randomMove generates a random move for the bot that gets returned to the game.",
            "itemtype": "method",
            "name": "randomMove",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns a valid move based on the open spaces",
                "type": "ValidMoves"
            },
            "class": "easyBot"
        },
        {
            "file": "easyThreesBot.js",
            "line": 14,
            "description": "runBot decides what the bot's next move will be depending on the difficulty chosen by the user.",
            "itemtype": "method",
            "name": "runBot",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "return": {
                "description": "none"
            },
            "class": "easyBot"
        },
        {
            "file": "easyThreesBot.js",
            "line": 28,
            "description": "randomMove generates a random move for the bot that gets returned to the game.",
            "itemtype": "method",
            "name": "randomMove",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns a valid move based on the open spaces",
                "type": "ValidMoves"
            },
            "class": "easyBot"
        },
        {
            "file": "easyThreesBot.js",
            "line": 45,
            "description": "checkWinBot checks to see if the move that the bot will make will win the game",
            "itemtype": "method",
            "name": "checkWinBot",
            "params": [
                {
                    "name": "an",
                    "description": "array of all the tiles",
                    "type": "Tiles"
                },
                {
                    "name": "a",
                    "description": "function that goes through an array of all the winning combinations",
                    "type": "WinComb"
                }
            ],
            "return": {
                "description": "Returns a valid move based on the open spaces",
                "type": "ValidMoves"
            },
            "class": "easyBot"
        },
        {
            "file": "easyThreesBotRules.js",
            "line": 1,
            "description": "addEvents adds the clicker events for all the positions on the 3x3 boards",
            "itemtype": "method",
            "name": "addEvents",
            "return": {
                "description": "No return, all the events are added"
            },
            "class": ""
        },
        {
            "file": "nineRulesEasy.js",
            "line": 1,
            "description": "Adds the tiles on the web page",
            "itemtype": "method",
            "name": "populateHTML",
            "return": {
                "description": "No return, all tiles are displayed on the page"
            },
            "class": ""
        },
        {
            "file": "nineRulesEasy.js",
            "line": 14,
            "description": "addEvents adds the clicker events for all the positions on the 9x9 boards",
            "itemtype": "method",
            "name": "addEvents",
            "return": {
                "description": "No return, all the events are added"
            },
            "class": ""
        }
    ],
    "warnings": []
}